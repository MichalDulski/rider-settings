<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeEditing/Intellisense/CodeCompletion/IntelliSenseCompletingCharacters/CSharpCompletingCharacters/UpgradedFromVSSettings/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue">Built-in: Full Cleanup</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/CONSTRUCTOR_OR_DESTRUCTOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/METHOD_OR_OPERATOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_TUPLE_COMPONENTS/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AFTER_CONTROL_TRANSFER_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AFTER_MULTILINE_STATEMENTS/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_STYLE/@EntryValue">Tab</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INT_ALIGN_NESTED_TERNARY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_ARROW_WITH_EXPRESSIONS/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
    &lt;TypePattern DisplayName="Non-reorderable types"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;And&gt;
                    &lt;Kind Is="Interface" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;Kind Is="Struct" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
    &lt;/TypePattern&gt;
    &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
        &lt;TypePattern.Match&gt;
            &lt;And&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;HasMember&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;
                    &lt;/And&gt;
                &lt;/HasMember&gt;
            &lt;/And&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constructor" /&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;ImplementsInterface Name="System.IDisposable" /&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind Order="Constructor" /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="All other members" /&gt;
        &lt;Entry Priority="100" DisplayName="Test Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;
                    &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
    &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;
        &lt;TypePattern.Match&gt;
            &lt;And&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;Or&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="True" /&gt;
                    &lt;HasMember&gt;
                        &lt;And&gt;
                            &lt;Kind Is="Method" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
                        &lt;/And&gt;
                    &lt;/HasMember&gt;
                &lt;/Or&gt;
            &lt;/And&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="True" /&gt;
                        &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="True" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="All other members" /&gt;
        &lt;Entry Priority="100" DisplayName="Test Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
                    &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
    &lt;TypePattern DisplayName="Default Pattern"&gt;
        &lt;Entry DisplayName="Constant Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Constant" /&gt;
                    &lt;Kind Is="Field" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Constructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Constructor" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Field" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Finalizers (Destructors)"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Destructor" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Delegates"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Delegate" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Events"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Event" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Enums"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Enum" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Interfaces (implementations)"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Interface" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Properties"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Property" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Indexers"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Indexer" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Method" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Structs"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Struct" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Classes"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Class" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
                &lt;Static /&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Implementations/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Implementations/Options/=Async/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/CodeStyle/Generate/=Implementations/Options/=Mutable/@EntryIndexedValue">False</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpAutoNaming/IsNotificationDisabled/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FHTML_005FCONTROL/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FTAG_005FNAME/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/WebNaming/UserRules/=ASP_005FTAG_005FPREFIX/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=NAMESPACE_005FALIAS/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=XAML_005FFIELD/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/XamlNaming/UserRules/=XAML_005FRESOURCE/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String></wpf:ResourceDictionary>